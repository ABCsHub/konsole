/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -l TESession -i TESession.h -a sessionscriptingadaptor -m org.kde.konsole.SessionScripting.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SESSIONSCRIPTINGADAPTOR_H_1161947113
#define SESSIONSCRIPTINGADAPTOR_H_1161947113

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "TESession.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.konsole.SessionScripting
 */
class SessionScriptingAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.konsole.SessionScripting")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.konsole.SessionScripting\" >\n"
"    <method name=\"feedSession\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"text\" />\n"
"    </method>\n"
"    <method name=\"sendSession\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"text\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    SessionScriptingAdaptor(TESession *parent);
    virtual ~SessionScriptingAdaptor();

    inline TESession *parent() const
    { return static_cast<TESession *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void feedSession(const QString &text);
    void sendSession(const QString &text);
Q_SIGNALS: // SIGNALS
};

#endif
