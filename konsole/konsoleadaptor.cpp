/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -l Konsole -i konsole.h -a konsoleadaptor -m org.kde.konsole.Konsole.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "konsoleadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KonsoleAdaptor
 */

KonsoleAdaptor::KonsoleAdaptor(Konsole *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KonsoleAdaptor::~KonsoleAdaptor()
{
    // destructor
}

void KonsoleAdaptor::activateSession(const QString &sessionId)
{
    // handle method call org.kde.konsole.Konsole.activateSession
    parent()->activateSession(sessionId);
}

QString KonsoleAdaptor::currentSession()
{
    // handle method call org.kde.konsole.Konsole.currentSession
    return parent()->currentSession();
}

bool KonsoleAdaptor::fullScreen()
{
    // handle method call org.kde.konsole.Konsole.fullScreen
    return parent()->fullScreen();
}

void KonsoleAdaptor::moveSessionLeft()
{
    // handle method call org.kde.konsole.Konsole.moveSessionLeft
    parent()->moveSessionLeft();
}

void KonsoleAdaptor::moveSessionRight()
{
    // handle method call org.kde.konsole.Konsole.moveSessionRight
    parent()->moveSessionRight();
}

QString KonsoleAdaptor::newSession(const QString &type)
{
    // handle method call org.kde.konsole.Konsole.newSession
    return parent()->newSession(type);
}

QString KonsoleAdaptor::newSession()
{
    // handle method call org.kde.konsole.Konsole.newSession
    return parent()->newSession();
}

void KonsoleAdaptor::nextSession()
{
    // handle method call org.kde.konsole.Konsole.nextSession
    parent()->nextSession();
}

void KonsoleAdaptor::prevSession()
{
    // handle method call org.kde.konsole.Konsole.prevSession
    parent()->prevSession();
}

void KonsoleAdaptor::reparseConfiguration()
{
    // handle method call org.kde.konsole.Konsole.reparseConfiguration
    parent()->reparseConfiguration();
}

int KonsoleAdaptor::sessionCount()
{
    // handle method call org.kde.konsole.Konsole.sessionCount
    return parent()->sessionCount();
}

QString KonsoleAdaptor::sessionId(int position)
{
    // handle method call org.kde.konsole.Konsole.sessionId
    return parent()->sessionId(position);
}

void KonsoleAdaptor::setFullScreen(bool on)
{
    // handle method call org.kde.konsole.Konsole.setFullScreen
    parent()->setFullScreen(on);
}


#include "konsoleadaptor.moc"
